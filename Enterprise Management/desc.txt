Лаба 1
Для сдачи первой лабы нашему преподу нужно просто показать работу программы и описать примерное взаимодействие 
А так же продемострировать где у тебя иерархия классов.

Опишу что написано
В классе програм простецкое меню
там далшье идут методы которые обрабатывают

В самом низу метод, которые заполняет данные просто чтоб было что показывать

Далее все вызовы идут в класс Factory, там хранится список товаров и сотрудников.
С которым и происходит работа
Пока что все сотрудники храняятся в одном списке в след лабе будет по другому

Иерархия классов сотсотит из сотрудников
- Абстрактный клас Employee в котором описана базоавя модель сотрудника
и наследники 
- обычный работяга ( доп поле - спецаиальтность)
- продавец (доп поле - то что продает)
- менеджер

Лаба 2 

Требуется создать обобщенную коллекцию под нашу иерерахию классов.
А так же рабоать с интерфейсамию. 
Мы создали коллекцию в папочке Collection. В этот интерфейс мы добавляем реализацию
интерфейса IEnumerable, этот интерфейс обязует реализовать метод GetEnumeraot и еще один который его вызвает
Этот метод возрващает объект для итерации, то есть мы сможем засунуть нашу коллекцию в цикл foreach или сможем сделать 
AddRange например в лист, как это происходит в новом добавленом свйостве в классе factory.

Так же мы изменили метод добавления нового сотрудника в фабрику. Теперь он является оббобщенным. 
В методе мы засовываем в свитч - нашего нового сотрудника и смотрим каким типом он является

Лаба 3
От нас требуется сделать сортировку с использование делегатов action или func в нашей коллекции

Что сделал. 
Во первых в меню добавил новый пункт сортировка. 
При его вызборе нам высвечивается меню и предлагают выбрать 1 -по имени сотрудника, 2 - по зарплате сотрудника
Считываем строку и отправляем её в метод класса Factory - SortEmployees
Там у нас на 126 строке объявлен делегат - переменная, внутрь которой 
мы поменстим метод сравнения элемнетов для сортировки
К этому делегату будут подходить все методы такой сигнатуры:

public(модификатор доступа не важен) bool Название(Employee 1, Employee 2)

Такие методы будут производить сравенение двух сотрудников по разным параметра
и возвращать true, если первый больше второго

Определили мы эти методы в классе Employee. Это статические методы в самом низу
Они производят сравнение, в коментах все описано

Вернемся в клас Factory. Там где в зависимости от поступившей строки
мы выбираем метод сортировки там же и записываем сообщение

Затем у каждой коллекции наших сотрудников мы вызываем метод сортировки
То есть сотрудники остортируются именно по коллекциям, а не в общей группе
(менеджеры среди менеджеров и т.д.)

Перейдем к реализации сотрировки
Для начала пропишем в интерфесе метод SortEmployees, затем имплиментируем 
его в непосредственно класс коллекции. Там внутри мы реализиовали метод
сортировки. Реаилзован он пузырьковым методом, потому что там 
наглядно видно где мы вызываем наш делегат
То есть мы не привязываемся внутри к конкретному типу сравнения, а сравнениваем
по методу поступившему из вне
вот как то так.

